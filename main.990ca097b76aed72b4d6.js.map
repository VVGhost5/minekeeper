{"version":3,"sources":["webpack:///./js/putBombs.js","webpack:///./js/pointsDataObject.js","webpack:///./js/putValue.js","webpack:///./js/putMines.js","webpack:///./js/putFlag.js","webpack:///./js/showValue.js","webpack:///./js/createField.js","webpack:///./js/deleteDefused.js","webpack:///./js/showPrompt.js","webpack:///./js/victory.js","webpack:///./js/timer.js","webpack:///./js/defeat.js","webpack:///./index.js"],"names":["checkBombPresence","randomValue","Math","floor","random","objects","arrayOfPoints","length","isMine","createBomb","fieldData","position","value","isFlag","isOpened","isDefused","this","putValueofBomb","object","coordinates","LeftTop","CenterTop","RightTop","LeftCenter","RightCenter","LeftBottom","CenterBottom","RightBottom","checkCoordinates","putMines","bombs","filter","el","map","putValueOfBomb","putFlag","event","target","dataset","flagsUsed","refs","gameFieldRef","children","textContent","menuFlagsRef","bombsDefused","push","showValue","classList","add","createField","point","document","createElement","appendChild","deleteDefusedMine","pop","showPrompt","alert","victory","clearInterval","newTimer","menuStatusRef","removeEventListener","Click","timer","setInterval","timerValue","menuTimerRef","defeat","getElementById","menuButtonRef","menuMinesRef","minesDropped","bombsQuantity","numberofPoints","i","pointData","multiplyObjects","callback","quantity","setAttribute","callFuncCreateField","ctrlKey","addBombsFunc","multiplyBombs","addEventListener"],"mappings":"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","file":"main.990ca097b76aed72b4d6.js","sourcesContent":["import { objects } from '../index';\r\n\r\nconst randomizeValue = () => {\r\n    let position = Math.floor(Math.random() * Math.floor(objects.arrayOfPoints.length));\r\n    return position;\r\n}\r\n  \r\nconst checkBombPresence = () => {\r\n    let randomValue = randomizeValue();\r\nif (objects.arrayOfPoints[randomValue].isMine) {\r\n  return checkBombPresence();\r\n} else {\r\n  return randomValue;\r\n  }\r\n}\r\n  \r\nconst createBomb = () => {\r\n  checkBombPresence();\r\n  objects.arrayOfPoints[checkBombPresence()].isMine = true;  \r\n}\r\n\r\nexport default createBomb;","class fieldData {\r\n    constructor(position, value, isMine, isFlag, isOpened, isDefused) {\r\n        this.position = position;\r\n        this.value = value;\r\n        this.isMine = isMine;\r\n        this.isFlag = isFlag;\r\n        this.isOpened = isOpened;\r\n        this.isDefused = isDefused;\r\n    }\r\n};\r\n\r\nexport default fieldData;","import { objects } from '../index';\r\n\r\nconst putValueofBomb = object => {\r\n\r\n  const coordinates = {\r\n    LeftTop: object.position - 21,\r\n    CenterTop: object.position - 20,\r\n    RightTop: object.position - 19,\r\n    LeftCenter: object.position - 1,\r\n    RightCenter: object.position + 1,\r\n    LeftBottom: object.position + 19,\r\n    CenterBottom: object.position + 20,\r\n    RightBottom: object.position + 21,\r\n  }\r\n \r\n  const checkCoordinates = (position) => {\r\n    if (!objects.arrayOfPoints[position]) {\r\n      return;\r\n    }\r\n    if (objects.arrayOfPoints[position].isMine) {\r\n      return;\r\n    }\r\nobjects.arrayOfPoints[position].value++;\r\n  };\r\n\r\n\r\n\r\n  const checkConditions = () => {\r\n    if (object.position % 20 === 0) {\r\n     checkCoordinates(coordinates.CenterTop);\r\n      checkCoordinates(coordinates.RightTop);\r\n      checkCoordinates(coordinates.RightCenter);\r\n      checkCoordinates(coordinates.CenterBottom);\r\n      checkCoordinates(coordinates.RightBottom);\r\n      \r\n   }\r\n      \r\n    else if (object.position - 1 % 19 === 0) {\r\n        checkCoordinates(coordinates.CenterTop);\r\n      checkCoordinates(coordinates.RightTop);\r\n      checkCoordinates(coordinates.RightCenter);\r\n      checkCoordinates(coordinates.CenterBottom);\r\n      checkCoordinates(coordinates.RightBottom);\r\n     }\r\n    else {\r\n    checkCoordinates(coordinates.LeftTop);\r\n    checkCoordinates(coordinates.CenterTop);\r\n    checkCoordinates(coordinates.RightTop);\r\n    checkCoordinates(coordinates.LeftCenter);\r\n    checkCoordinates(coordinates.RightCenter);\r\n    checkCoordinates(coordinates.LeftBottom);\r\n    checkCoordinates(coordinates.CenterBottom);\r\n    checkCoordinates(coordinates.RightBottom);\r\n     }\r\n    \r\n  \r\n  };\r\n\r\n  checkConditions();\r\n}\r\n\r\nexport default putValueofBomb;","import { objects } from '../index';\r\nimport putValueOfBomb from './putValue';\r\n\r\nconst putMines = () => {\r\n    objects.bombs = objects.arrayOfPoints.filter((el) => el.isMine === true );\r\n    objects.bombs.map((el) => {\r\nputValueOfBomb(el);\r\n    })\r\n    \r\n};\r\n\r\nexport default putMines;","import { objects, refs } from '../index';\r\n\r\nconst putFlag = (event) => {\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isFlag || objects.arrayOfPoints[event.target.dataset.value].isOpened ) {\r\n        return;\r\n    }\r\n    if (objects.flagsUsed >= objects.bombs.length) {\r\n        return;\r\n    }\r\n\r\n    refs.gameFieldRef.children[event.target.dataset.value].textContent = \"F\";\r\n    objects.arrayOfPoints[event.target.dataset.value].isFlag = true;\r\n    objects.flagsUsed++;\r\n    refs.menuFlagsRef.textContent = objects.flagsUsed;\r\n\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isFlag && objects.arrayOfPoints[event.target.dataset.value].isMine) {\r\n        if (objects.arrayOfPoints[event.target.dataset.value].isDefused) {\r\n            return;\r\n}\r\n        \r\n        objects.bombsDefused.push(objects.arrayOfPoints[event.target.dataset.value]);\r\n        objects.arrayOfPoints[event.target.dataset.value].isDefused = true;\r\n            return;\r\n    } \r\n}\r\n\r\nexport default putFlag;","import { refs, objects } from '../index';\r\n\r\nconst showValue = event => {\r\n        refs.gameFieldRef.children[event.target.dataset.value].textContent = objects.arrayOfPoints[event.target.dataset.value].value; \r\n        refs.gameFieldRef.children[event.target.dataset.value].classList.add(`color_${objects.arrayOfPoints[event.target.dataset.value].value}`);\r\n};\r\n\r\nexport default showValue;","import { objects, refs } from '../index';\r\n\r\nconst createField = () => {\r\n  objects.point = document.createElement('div');\r\n\r\n  refs.gameFieldRef.appendChild(objects.point);\r\n  objects.point.classList.add(`point`);\r\n  return objects.point;\r\n};\r\n\r\nexport default createField;","import { objects } from '../index';\r\n\r\nconst deleteDefusedMine = (event) => {\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isDefused) {\r\n        \r\n        objects.arrayOfPoints[event.target.dataset.value].isDefused = false;\r\n        objects.bombsDefused.pop();\r\n    }\r\n};\r\n\r\nexport default deleteDefusedMine;","const showPrompt = () => {\r\n    alert('Чтобы поставить флаг, нажмите Ctrl + ЛКМ');\r\n}\r\n\r\nexport default showPrompt;","import { refs, objects, Click } from '../index';\r\n\r\nconst victory = () => {\r\n    if (objects.bombsDefused.length === objects.bombs.length) {\r\n        clearInterval(objects.newTimer);\r\n        refs.menuStatusRef.textContent = \"You win !\"\r\n        refs.gameFieldRef.removeEventListener('click', Click);\r\n    }   \r\n}\r\n\r\nexport default victory;","import { refs, objects} from '../index';\r\nimport victory from './victory';\r\n\r\nconst timer = () => {\r\n    objects.newTimer = setInterval(() => {\r\n        objects.timerValue++;\r\n        refs.menuTimerRef.textContent = objects.timerValue;\r\n        victory();\r\n    }, 1000); \r\n}\r\n\r\nexport default timer;","import { refs, objects, Click } from '../index';\r\n\r\nconst defeat = () => {\r\n    clearInterval(objects.newTimer);\r\n    objects.bombs.map(el => {\r\n        refs.gameFieldRef.children[el.position].classList.add('isBomb');\r\n        \r\n    })\r\n    refs.menuStatusRef.textContent = \"You lose !\"\r\n    refs.gameFieldRef.removeEventListener('click', Click);\r\n}\r\n\r\nexport default defeat;","import './styles.css';\r\nimport createBomb from './js/putBombs';\r\nimport fieldData from './js/pointsDataObject';\r\nimport putMines from './js/putMines';\r\nimport putFlag from './js/putFlag';\r\nimport showValue from './js/showValue';\r\nimport createField from './js/createField';\r\nimport deleteDefusedMine from './js/deleteDefused';\r\nimport showPrompt from './js/showPrompt';\r\nimport timer from './js/timer';\r\nimport defeat from './js/defeat';\r\n\r\nconst refs = {\r\n gameFieldRef: document.getElementById('game-field'),\r\n menuStatusRef: document.getElementById('menu__status'),\r\n menuTimerRef: document.getElementById('menu__timer'),\r\n menuButtonRef: document.getElementById('menu__prompt-button'),\r\n menuMinesRef: document.getElementById('menu__mines-select'),\r\n menuFlagsRef: document.getElementById('menu__flags'),\r\n}\r\n\r\nconst objects = {\r\nnewTimer: null,\r\n timerValue: 0,\r\n bombsDefused: [],\r\n bombs: [],\r\n minesDropped: false,\r\n bombsQuantity: 0,\r\n point: 0,\r\n numberofPoints: 220,\r\n arrayOfPoints: [],\r\n flagsUsed: 0,\r\n}\r\n\r\nrefs.menuStatusRef.textContent = '';\r\n\r\nconst callFuncCreateField = (callback, quantity) => {\r\n  for (let i = 0; i < quantity; i++) {\r\n    callback(i).setAttribute('data-value', i);\r\n  }\r\n};\r\n\r\nconst multiplyObjects = (numberofPoints) => {\r\n    for (let i = 0; i < numberofPoints; i++) {\r\n        let pointData = new fieldData(i, 0, false, false, false, false);\r\n        objects.arrayOfPoints.push(pointData);\r\n    }\r\n}\r\n\r\nconst multiplyBombs = (addBombsFunc, bombs) => {\r\n    for (let i = 0; i < bombs; i++) {\r\n        addBombsFunc(i);\r\n    }\r\n}\r\n\r\nmultiplyObjects(objects.numberofPoints);\r\ncallFuncCreateField(createField, objects.numberofPoints);\r\n\r\nconst Click = event => {\r\n    deleteDefusedMine(event);\r\n\r\n    if (event.ctrlKey) {\r\n        return putFlag(event);\r\n    }\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isFlag) {\r\n        objects.arrayOfPoints[event.target.dataset.value].isFlag = false;\r\n        objects.flagsUsed--;\r\n        refs.menuFlagsRef.textContent = objects.flagsUsed;\r\n        return refs.gameFieldRef.children[event.target.dataset.value].textContent = \"\";\r\n    }\r\n    \r\n    if (!objects.minesDropped) {\r\n        objects.bombsQuantity = refs.menuMinesRef.value;\r\n        refs.menuMinesRef.setAttribute('disabled', 'disabled');\r\n        multiplyBombs(createBomb, objects.bombsQuantity);\r\n        putMines();\r\n        objects.minesDropped = true;\r\n        timer();\r\n    }\r\n\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isOpened) {\r\n        return;\r\n    }\r\n             \r\n    if (!objects.arrayOfPoints[event.target.dataset.value].isMine) {\r\n        refs.gameFieldRef.children[event.target.dataset.value].classList.add('isOpened');\r\n        objects.arrayOfPoints[event.target.dataset.value].isOpened = true;\r\n        return showValue(event);\r\n    }\r\n    defeat(); \r\n} \r\n\r\nrefs.gameFieldRef.addEventListener('click', Click);\r\nrefs.menuButtonRef.addEventListener('click', showPrompt);\r\n\r\nexport { refs, objects, Click};"],"sourceRoot":""}