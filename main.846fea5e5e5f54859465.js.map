{"version":3,"sources":["webpack:///./index.js","webpack:///./js/putBombs.js","webpack:///./js/pointsDataObject.js","webpack:///./js/putValue.js"],"names":["newTimer","bombsQuantity","point","randomizeValue","Math","floor","random","arrayOfPoints","length","checkBombPresence","randomValue","console","log","isMine","createBomb","position","fieldData","value","isFlag","isOpened","isDefused","this","putValueofBomb","object","coordinates","LeftTop","CenterTop","RightTop","LeftCenter","RightCenter","LeftBottom","CenterBottom","RightBottom","checkCoordinates","gameFieldRef","document","querySelector","menuRef","menuStatusRef","menuTimerRef","menuButtonRef","menuMinesRef","menuFlagsRef","timerValue","bombsDefused","bombs","minesDropped","numberofPoints","flagsUsed","textContent","i","pointData","push","multiplyObjects","callback","quantity","setAttribute","callFuncCreateField","createElement","appendChild","classList","add","timer","setInterval","clearInterval","removeEventListener","Click","event","target","dataset","pop","deleteDefusedMine","ctrlKey","children","putFlag","addBombsFunc","multiplyBombs","filter","el","map","putValueOfBomb","showValue","addEventListener","alert"],"mappings":"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","file":"main.846fea5e5e5f54859465.js","sourcesContent":["import './styles.css';\r\nimport createBomb from './js/putBombs.js';\r\nimport fieldData from './js/pointsDataObject.js';\r\nimport putValueOfBomb from './js/putValue.js';\r\n\r\nconst gameFieldRef = document.querySelector('.game-field');\r\nconst menuRef = document.querySelector('.menu');\r\nconst menuStatusRef = menuRef.querySelector('.menu__status');\r\nconst menuTimerRef = menuRef.querySelector('.menu__timer');\r\nconst menuButtonRef = menuRef.querySelector('.menu__prompt-button');\r\nconst menuMinesRef = menuRef.querySelector('#menu__mines-select');\r\nconst menuFlagsRef = menuRef.querySelector('.menu__flags');\r\n\r\nlet newTimer;\r\nlet timerValue = 0;\r\nlet bombsDefused = [];\r\nlet bombs = [];\r\nlet minesDropped = false;\r\nlet bombsQuantity;\r\nlet point;\r\nlet numberofPoints = 220;\r\nlet arrayOfPoints = [];\r\nlet flagsUsed = 0;\r\n\r\nexport { arrayOfPoints };\r\nexport { numberofPoints };\r\nexport { bombsQuantity };\r\n\r\nmenuStatusRef.textContent = '';\r\n\r\nexport { gameFieldRef };\r\n\r\nconst createField = () => {\r\n  point = document.createElement('div');\r\n\r\n  gameFieldRef.appendChild(point);\r\n  point.classList.add(`point`);\r\n  return point;\r\n};\r\n\r\nconst callFuncCreateField = (callback, quantity) => {\r\n  for (let i = 0; i < quantity; i++) {\r\n    callback(i).setAttribute('data-value', i);\r\n  }\r\n};\r\n\r\nconst multiplyObjects = (numberofPoints) => {\r\n    for (let i = 0; i < numberofPoints; i++) {\r\n        let pointData = new fieldData(i, 0, false, false, false, false);\r\n        arrayOfPoints.push(pointData);\r\n    }\r\n}\r\n\r\nconst multiplyBombs = (addBombsFunc, bombs) => {\r\n    for (let i = 0; i < bombs; i++) {\r\n        addBombsFunc(i);\r\n    }\r\n}\r\n\r\nconst showValue = event => {\r\n        gameFieldRef.children[event.target.dataset.value].textContent = arrayOfPoints[event.target.dataset.value].value; \r\n    if (arrayOfPoints[event.target.dataset.value].value === 1) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('one');\r\n    }\r\n    if (arrayOfPoints[event.target.dataset.value].value === 2) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('two');\r\n    }\r\n     if (arrayOfPoints[event.target.dataset.value].value === 3) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('three');\r\n    }\r\n     if (arrayOfPoints[event.target.dataset.value].value === 4) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('four');\r\n    }\r\n      if (arrayOfPoints[event.target.dataset.value].value === 5) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('five');\r\n    }\r\n     if (arrayOfPoints[event.target.dataset.value].value === 6) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('six');\r\n    }\r\n     if (arrayOfPoints[event.target.dataset.value].value === 7) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('seven');\r\n    }\r\n     if (arrayOfPoints[event.target.dataset.value].value === 8) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('eight');\r\n    }\r\n};\r\n\r\nconst putMines = () => {\r\n    bombs = arrayOfPoints.filter((el) => el.isMine === true );\r\n    bombs.map((el) => {\r\nputValueOfBomb(el);\r\n    })\r\n    \r\n};\r\n\r\nconst putFlag = (event) => {\r\n    if (arrayOfPoints[event.target.dataset.value].isFlag || arrayOfPoints[event.target.dataset.value].isOpened ) {\r\n        return;\r\n    }\r\n    if (flagsUsed >= bombs.length) {\r\n        return;\r\n    }\r\n\r\n    gameFieldRef.children[event.target.dataset.value].textContent = \"F\";\r\n    arrayOfPoints[event.target.dataset.value].isFlag = true;\r\n    flagsUsed++;\r\n    menuFlagsRef.textContent = flagsUsed;\r\n\r\n    if (arrayOfPoints[event.target.dataset.value].isFlag && arrayOfPoints[event.target.dataset.value].isMine) {\r\n        if (arrayOfPoints[event.target.dataset.value].isDefused) {\r\n            return;\r\n}\r\n        \r\n        bombsDefused.push(arrayOfPoints[event.target.dataset.value]);\r\n        arrayOfPoints[event.target.dataset.value].isDefused = true;\r\n            return;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}\r\n\r\nconst defeat = () => {\r\n    clearInterval(newTimer);\r\n    bombs.map(el => {\r\n        gameFieldRef.children[el.position].classList.add('isBomb');\r\n        \r\n    })\r\n    menuStatusRef.textContent = \"You lose !\"\r\n    gameFieldRef.removeEventListener('click', Click);\r\n}\r\n\r\nmultiplyObjects(numberofPoints);\r\ncallFuncCreateField(createField, numberofPoints);\r\n\r\n// const checkConditionOfVictory = () => {\r\n//     bombs.map(el => {\r\n//         if (el.isFlag) {\r\n//             return bombsDefused++\r\n           \r\n//         }\r\n//     })\r\n// };\r\n\r\nconst deleteDefusedMine = (event) => {\r\n    if (arrayOfPoints[event.target.dataset.value].isDefused) {\r\n        \r\n        arrayOfPoints[event.target.dataset.value].isDefused = false;\r\n        bombsDefused.pop();\r\n    }\r\n};\r\n \r\nconst victory = () => {\r\n    if (bombsDefused.length === bombs.length) {\r\n        clearInterval(newTimer);\r\n        menuStatusRef.textContent = \"You win !\"\r\n        gameFieldRef.removeEventListener('click', Click);\r\n    }\r\n        \r\n}\r\n\r\nconst timer = () => {\r\n    newTimer = setInterval(() => {\r\n        timerValue++;\r\n        menuTimerRef.textContent = timerValue;\r\n        victory();\r\n    }, 1000); \r\n}\r\n\r\nconst Click = event => {\r\n    deleteDefusedMine(event);\r\n\r\n    if (event.ctrlKey) {\r\n        return putFlag(event);\r\n    }\r\n    if (arrayOfPoints[event.target.dataset.value].isFlag) {\r\n        arrayOfPoints[event.target.dataset.value].isFlag = false;\r\n        flagsUsed--;\r\n        menuFlagsRef.textContent = flagsUsed;\r\n        return gameFieldRef.children[event.target.dataset.value].textContent = \"\";\r\n    }\r\n    \r\n\r\n    if (!minesDropped) {\r\n        bombsQuantity = menuMinesRef.value;\r\n        menuMinesRef.setAttribute('disabled', 'disabled');\r\n        multiplyBombs(createBomb, bombsQuantity);\r\n        putMines();\r\n        minesDropped = true;\r\n        timer();\r\n    }\r\n\r\n    if (arrayOfPoints[event.target.dataset.value].isOpened) {\r\n        return;\r\n    }\r\n             \r\n    if (!arrayOfPoints[event.target.dataset.value].isMine) {\r\n        gameFieldRef.children[event.target.dataset.value].classList.add('isOpened');\r\n        arrayOfPoints[event.target.dataset.value].isOpened = true;\r\n\r\n        return showValue(event);\r\n    }\r\n    defeat(); \r\n} \r\n\r\nconst showPrompt = () => {\r\n    alert('Чтобы поставить флаг, нажмите Ctrl + ЛКМ');\r\n}\r\n\r\ngameFieldRef.addEventListener('click', Click);\r\nmenuButtonRef.addEventListener('click', showPrompt);\r\n\r\n// gameFieldRef.addEventListener('click', ((event) => deleteDefusedMine(event)));\r\n// gameFieldRef.addEventListener('click', () => {\r\n//     if (flagsUsed > bombs.length) {\r\n//         return;\r\n//     }\r\n//     checkConditionOfVictory(bombs)\r\n// });\r\n\r\n\r\n","import { arrayOfPoints } from '../index.js';\r\n\r\n\r\nconst randomizeValue = () => {\r\n    let position = Math.floor(Math.random() * Math.floor(arrayOfPoints.length));\r\n    return position;\r\n}\r\n  \r\nconst checkBombPresence = () => {\r\n    let randomValue = randomizeValue();\r\n    console.log(`Случайное число - ${randomValue}`);\r\nif (arrayOfPoints[randomValue].isMine) {\r\n    console.log(`${randomizeValue()} Блять, тут мина !!! Делаю еще раз`);\r\n  return checkBombPresence();\r\n} else {\r\n  console.log(`новое число - ${randomValue}`);\r\n  return randomValue;\r\n  }\r\n  \r\n}\r\n  \r\nconst createBomb = () => {\r\n  checkBombPresence();\r\n  arrayOfPoints[checkBombPresence()].isMine = true;\r\n  console.log(`${arrayOfPoints[checkBombPresence()].position} тут мина`);\r\n    \r\n}\r\n\r\nexport default createBomb;","class fieldData {\r\n    constructor(position, value, isMine, isFlag, isOpened, isDefused) {\r\n        this.position = position;\r\n        this.value = value;\r\n        this.isMine = isMine;\r\n        this.isFlag = isFlag;\r\n        this.isOpened = isOpened;\r\n        this.isDefused = isDefused;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default fieldData;","import { arrayOfPoints } from '../index.js';\r\n\r\nconst putValueofBomb = object => {\r\n\r\n  const coordinates = {\r\n    LeftTop: object.position - 21,\r\n    CenterTop: object.position - 20,\r\n    RightTop: object.position - 19,\r\n    LeftCenter: object.position - 1,\r\n    RightCenter: object.position + 1,\r\n    LeftBottom: object.position + 19,\r\n    CenterBottom: object.position + 20,\r\n    RightBottom: object.position + 21,\r\n  }\r\n \r\n  const checkCoordinates = (position) => {\r\n    if (!arrayOfPoints[position]) {\r\n      return;\r\n    }\r\n    if (arrayOfPoints[position].isMine) {\r\n      return;\r\n    }\r\narrayOfPoints[position].value++;\r\n  };\r\n\r\n\r\n\r\n  const checkConditions = () => {\r\n    if (object.position % 20 === 0) {\r\n     checkCoordinates(coordinates.CenterTop);\r\n      checkCoordinates(coordinates.RightTop);\r\n      checkCoordinates(coordinates.RightCenter);\r\n      checkCoordinates(coordinates.CenterBottom);\r\n      checkCoordinates(coordinates.RightBottom);\r\n      \r\n   }\r\n      \r\n    else if (object.position - 1 % 19 === 0) {\r\n        checkCoordinates(coordinates.CenterTop);\r\n      checkCoordinates(coordinates.RightTop);\r\n      checkCoordinates(coordinates.RightCenter);\r\n      checkCoordinates(coordinates.CenterBottom);\r\n      checkCoordinates(coordinates.RightBottom);\r\n     }\r\n    else {\r\n    checkCoordinates(coordinates.LeftTop);\r\n    checkCoordinates(coordinates.CenterTop);\r\n    checkCoordinates(coordinates.RightTop);\r\n    checkCoordinates(coordinates.LeftCenter);\r\n    checkCoordinates(coordinates.RightCenter);\r\n    checkCoordinates(coordinates.LeftBottom);\r\n    checkCoordinates(coordinates.CenterBottom);\r\n    checkCoordinates(coordinates.RightBottom);\r\n     }\r\n    \r\n  \r\n  };\r\n\r\n  checkConditions();\r\n}\r\n\r\nexport default putValueofBomb;"],"sourceRoot":""}