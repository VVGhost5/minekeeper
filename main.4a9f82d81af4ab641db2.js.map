{"version":3,"sources":["webpack:///./js/pointsDataObject.js","webpack:///./js/putFlag.js","webpack:///./js/showValue.js","webpack:///./js/openPoint.js","webpack:///./js/createField.js","webpack:///./js/deleteDefused.js","webpack:///./js/deleteFlag.js","webpack:///./js/showPrompt.js","webpack:///./js/putBombs.js","webpack:///./js/victory.js","webpack:///./js/timer.js","webpack:///./js/putValue.js","webpack:///./js/putMines.js","webpack:///./js/initGame.js","webpack:///./js/defeat.js","webpack:///./index.js"],"names":["fieldData","position","value","isMine","isFlag","isOpened","isDefused","this","putFlag","event","objects","arrayOfPoints","target","dataset","flagsUsed","bombs","length","refs","gameFieldRef","children","textContent","menuFlagsRef","bombsDefused","push","showValue","classList","add","openPoint","createField","point","document","createElement","appendChild","deleteDefusedMine","pop","deleteFlag","showPrompt","alert","checkBombPresence","randomValue","Math","floor","random","createBomb","victory","clearInterval","newTimer","menuStatusRef","removeEventListener","Click","timer","setInterval","timerValue","menuTimerRef","putValueofBomb","object","coordinates","LeftTop","CenterTop","RightTop","LeftCenter","RightCenter","LeftBottom","CenterBottom","RightBottom","checkCoordinates","putMines","filter","el","map","putValueOfBomb","initGame","bombsQuantity","menuMinesRef","setAttribute","multiplyBombs","minesDropped","defeat","getElementById","menuButtonRef","numberofPoints","addBombsFunc","i","pointData","multiplyObjects","callback","quantity","callFuncCreateField","ctrlKey","addEventListener"],"mappings":"wSAWeA,EAVX,SAAYC,EAAUC,EAAOC,EAAQC,EAAQC,EAAUC,GACnDC,KAAKN,SAAWA,EAChBM,KAAKL,MAAQA,EACbK,KAAKJ,OAASA,EACdI,KAAKH,OAASA,EACdG,KAAKF,SAAWA,EAChBE,KAAKD,UAAYA,GCmBVE,EAxBC,SAACC,GACb,IAAIC,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOE,SAAUM,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOG,YAG9GK,EAAQI,WAAaJ,EAAQK,MAAMC,UAIvCC,EAAKC,aAAaC,SAASV,EAAMG,OAAOC,QAAQX,OAAOkB,YAAc,IACrEV,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOE,QAAS,EAC3DM,EAAQI,YACRG,EAAKI,aAAaD,YAAcV,EAAQI,UAEpCJ,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOE,QAAUM,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOC,QAAQ,CACtH,GAAIO,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOI,UAClD,OAKA,OAFJI,EAAQY,aAAaC,KAAKb,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,aACrEQ,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOI,WAAY,KCdvDkB,EALG,SAAAf,GACVQ,EAAKC,aAAaC,SAASV,EAAMG,OAAOC,QAAQX,OAAOkB,YAAcV,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOA,MACvHe,EAAKC,aAAaC,SAASV,EAAMG,OAAOC,QAAQX,OAAOuB,UAAUC,IAAjE,SAA8EhB,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOA,QCKzHyB,EANG,SAAClB,GAGX,OAFRQ,EAAKC,aAAaC,SAASV,EAAMG,OAAOC,QAAQX,OAAOuB,UAAUC,IAAI,YAC7DhB,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOG,UAAW,EACtDmB,EAAUf,ICIVmB,EARK,WAKlB,OAJAlB,EAAQmB,MAAQC,SAASC,cAAc,OAEvCd,EAAKC,aAAac,YAAYtB,EAAQmB,OACtCnB,EAAQmB,MAAMJ,UAAUC,IAAxB,SACOhB,EAAQmB,OCGFI,EARW,SAACxB,GACnBC,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOI,YAElDI,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOI,WAAY,EAC9DI,EAAQY,aAAaY,QCGdC,EAPI,SAAC1B,GAIZ,OAHPC,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOE,QAAS,EACpDM,EAAQI,YACRG,EAAKI,aAAaD,YAAcV,EAAQI,UACjCG,EAAKC,aAAaC,SAASV,EAAMG,OAAOC,QAAQX,OAAOkB,YAAc,ICFrEgB,EAJI,WACfC,MAAM,6CCMJC,EAAoB,SAApBA,IACF,IAAIC,EALWC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM/B,EAAQC,cAAcK,SAM/E,OAAIN,EAAQC,cAAc4B,GAAapC,OAC9BmC,IAEAC,GASMI,EALI,WACjBL,IACA5B,EAAQC,cAAc2B,KAAqBnC,QAAS,GCRvCyC,EARC,WACRlC,EAAQY,aAAaN,SAAWN,EAAQK,MAAMC,SAC9C6B,cAAcnC,EAAQoC,UACtB7B,EAAK8B,cAAc3B,YAAc,YACjCH,EAAKC,aAAa8B,oBAAoB,QAASC,KCKxCC,EARD,WACVxC,EAAQoC,SAAWK,aAAY,WAC3BzC,EAAQ0C,aACRnC,EAAKoC,aAAajC,YAAcV,EAAQ0C,WACxCR,MACD,MCqDQU,G,oBA3DQ,SAAAC,GAErB,IAAMC,EAAc,CAClBC,QAASF,EAAOtD,SAAW,GAC3ByD,UAAWH,EAAOtD,SAAW,GAC7B0D,SAAUJ,EAAOtD,SAAW,GAC5B2D,WAAYL,EAAOtD,SAAW,EAC9B4D,YAAaN,EAAOtD,SAAW,EAC/B6D,WAAYP,EAAOtD,SAAW,GAC9B8D,aAAcR,EAAOtD,SAAW,GAChC+D,YAAaT,EAAOtD,SAAW,IAG3BgE,EAAmB,SAAChE,GACnBS,EAAQC,cAAcV,KAGvBS,EAAQC,cAAcV,GAAUE,QAGxCO,EAAQC,cAAcV,GAAUC,UAMxBqD,EAAOtD,SAAW,IAAO,GASpBsD,EAAOtD,SAAW,GAAW,GARrCgE,EAAiBT,EAAYE,WAC5BO,EAAiBT,EAAYG,UAC7BM,EAAiBT,EAAYK,aAC7BI,EAAiBT,EAAYO,cAC7BE,EAAiBT,EAAYQ,eAY/BC,EAAiBT,EAAYC,SAC7BQ,EAAiBT,EAAYE,WAC7BO,EAAiBT,EAAYG,UAC7BM,EAAiBT,EAAYI,YAC7BK,EAAiBT,EAAYK,aAC7BI,EAAiBT,EAAYM,YAC7BG,EAAiBT,EAAYO,cAC7BE,EAAiBT,EAAYQ,gBCzClBE,EARE,WACbxD,EAAQK,MAAQL,EAAQC,cAAcwD,QAAO,SAACC,GAAD,OAAsB,IAAdA,EAAGjE,UACxDO,EAAQK,MAAMsD,KAAI,SAACD,GACvBE,EAAeF,OCUAG,EATE,WAChB7D,EAAQ8D,cAAgBvD,EAAKwD,aAAavE,MACnCe,EAAKwD,aAAaC,aAAa,WAAY,YAC3CC,EAAchC,EAAYjC,EAAQ8D,eAClCN,IACAxD,EAAQkE,cAAe,EACvB1B,KCDO2B,EAVA,WACXhC,cAAcnC,EAAQoC,UACtBpC,EAAQK,MAAMsD,KAAI,SAAAD,GACdnD,EAAKC,aAAaC,SAASiD,EAAGnE,UAAUwB,UAAUC,IAAI,aAG1DT,EAAK8B,cAAc3B,YAAc,aACjCH,EAAKC,aAAa8B,oBAAoB,QAASC,ICG7ChC,EAAO,CACZC,aAAcY,SAASgD,eAAe,cACtC/B,cAAejB,SAASgD,eAAe,gBACvCzB,aAAcvB,SAASgD,eAAe,eACtCC,cAAejD,SAASgD,eAAe,uBACvCL,aAAc3C,SAASgD,eAAe,sBACtCzD,aAAcS,SAASgD,eAAe,gBAGjCpE,EAAU,CAChBoC,SAAU,KACTM,WAAY,EACZ9B,aAAc,GACdP,MAAO,GACP6D,cAAc,EACdJ,cAAe,EACf3C,MAAO,EACPmD,eAAgB,IAChBrE,cAAe,GACfG,UAAW,GAGZG,EAAK8B,cAAc3B,YAAc,GAEjC,IAaMuD,EAAgB,SAACM,EAAclE,GACjC,IAAK,IAAImE,EAAI,EAAGA,EAAInE,EAAOmE,IACvBD,EAAaC,KATG,SAACF,GACrB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAgBE,IAAK,CACrC,IAAIC,EAAY,IAAInF,EAAUkF,EAAG,GAAG,GAAO,GAAO,GAAO,GACzDxE,EAAQC,cAAcY,KAAK4D,IAUnCC,CAAgB1E,EAAQsE,gBAnBI,SAACK,EAAUC,GACrC,IAAK,IAAIJ,EAAI,EAAGA,EAAII,EAAUJ,IAC5BG,EAASH,GAAGR,aAAa,aAAcQ,GAkB3CK,CAAoB3D,EAAalB,EAAQsE,gBAEzC,IAAM/B,EAAQ,SAAAxC,GAGV,OAFAwB,EAAkBxB,GAEdA,EAAM+E,QACChF,EAAQC,GAEfC,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOE,OAC3C+B,EAAW1B,IAGjBC,EAAQkE,cACTL,IAGA7D,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOG,cAAtD,EAIKK,EAAQC,cAAcF,EAAMG,OAAOC,QAAQX,OAAOC,YAGvD0E,IAFWlD,EAAUlB,KAKzBQ,EAAKC,aAAauE,iBAAiB,QAASxC,GAC5ChC,EAAK8D,cAAcU,iBAAiB,QAASrD,K","file":"main.4a9f82d81af4ab641db2.js","sourcesContent":["class fieldData {\r\n    constructor(position, value, isMine, isFlag, isOpened, isDefused) {\r\n        this.position = position;\r\n        this.value = value;\r\n        this.isMine = isMine;\r\n        this.isFlag = isFlag;\r\n        this.isOpened = isOpened;\r\n        this.isDefused = isDefused;\r\n    }\r\n};\r\n\r\nexport default fieldData;","import { objects, refs } from '../index';\r\n\r\nconst putFlag = (event) => {\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isFlag || objects.arrayOfPoints[event.target.dataset.value].isOpened ) {\r\n        return;\r\n    }\r\n    if (objects.flagsUsed >= objects.bombs.length) {\r\n        return;\r\n    }\r\n\r\n    refs.gameFieldRef.children[event.target.dataset.value].textContent = \"F\";\r\n    objects.arrayOfPoints[event.target.dataset.value].isFlag = true;\r\n    objects.flagsUsed++;\r\n    refs.menuFlagsRef.textContent = objects.flagsUsed;\r\n\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isFlag && objects.arrayOfPoints[event.target.dataset.value].isMine) {\r\n        if (objects.arrayOfPoints[event.target.dataset.value].isDefused) {\r\n            return;\r\n}\r\n        \r\n        objects.bombsDefused.push(objects.arrayOfPoints[event.target.dataset.value]);\r\n        objects.arrayOfPoints[event.target.dataset.value].isDefused = true;\r\n            return;\r\n    } \r\n}\r\n\r\nexport default putFlag;","import { refs, objects } from '../index';\r\n\r\nconst showValue = event => {\r\n        refs.gameFieldRef.children[event.target.dataset.value].textContent = objects.arrayOfPoints[event.target.dataset.value].value; \r\n        refs.gameFieldRef.children[event.target.dataset.value].classList.add(`color_${objects.arrayOfPoints[event.target.dataset.value].value}`);\r\n};\r\n\r\nexport default showValue;","import { objects, refs} from '../index';\r\nimport showValue from './showValue';\r\n\r\nconst openPoint = (event) => {\r\nrefs.gameFieldRef.children[event.target.dataset.value].classList.add('isOpened');\r\n        objects.arrayOfPoints[event.target.dataset.value].isOpened = true;\r\n        return showValue(event);\r\n}\r\n\r\nexport default openPoint;","import { objects, refs } from '../index';\r\n\r\nconst createField = () => {\r\n  objects.point = document.createElement('div');\r\n\r\n  refs.gameFieldRef.appendChild(objects.point);\r\n  objects.point.classList.add(`point`);\r\n  return objects.point;\r\n};\r\n\r\nexport default createField;","import { objects } from '../index';\r\n\r\nconst deleteDefusedMine = (event) => {\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isDefused) {\r\n        \r\n        objects.arrayOfPoints[event.target.dataset.value].isDefused = false;\r\n        objects.bombsDefused.pop();\r\n    }\r\n};\r\n\r\nexport default deleteDefusedMine;","import { objects, refs } from '../index';\r\n\r\nconst deleteFlag = (event) => {\r\n objects.arrayOfPoints[event.target.dataset.value].isFlag = false;\r\n        objects.flagsUsed--;\r\n        refs.menuFlagsRef.textContent = objects.flagsUsed;\r\n        return refs.gameFieldRef.children[event.target.dataset.value].textContent = \"\";\r\n}\r\n\r\nexport default deleteFlag;","const showPrompt = () => {\r\n    alert('Чтобы поставить флаг, нажмите Ctrl + ЛКМ');\r\n}\r\n\r\nexport default showPrompt;","import { objects } from '../index';\r\n\r\nconst randomizeValue = () => {\r\n    let position = Math.floor(Math.random() * Math.floor(objects.arrayOfPoints.length));\r\n    return position;\r\n}\r\n  \r\nconst checkBombPresence = () => {\r\n    let randomValue = randomizeValue();\r\nif (objects.arrayOfPoints[randomValue].isMine) {\r\n  return checkBombPresence();\r\n} else {\r\n  return randomValue;\r\n  }\r\n}\r\n  \r\nconst createBomb = () => {\r\n  checkBombPresence();\r\n  objects.arrayOfPoints[checkBombPresence()].isMine = true;  \r\n}\r\n\r\nexport default createBomb;","import { refs, objects, Click } from '../index';\r\n\r\nconst victory = () => {\r\n    if (objects.bombsDefused.length === objects.bombs.length) {\r\n        clearInterval(objects.newTimer);\r\n        refs.menuStatusRef.textContent = \"You win !\"\r\n        refs.gameFieldRef.removeEventListener('click', Click);\r\n    }   \r\n}\r\n\r\nexport default victory;","import { refs, objects} from '../index';\r\nimport victory from './victory';\r\n\r\nconst timer = () => {\r\n    objects.newTimer = setInterval(() => {\r\n        objects.timerValue++;\r\n        refs.menuTimerRef.textContent = objects.timerValue;\r\n        victory();\r\n    }, 1000); \r\n}\r\n\r\nexport default timer;","import { objects } from '../index';\r\n\r\nconst putValueofBomb = object => {\r\n\r\n  const coordinates = {\r\n    LeftTop: object.position - 21,\r\n    CenterTop: object.position - 20,\r\n    RightTop: object.position - 19,\r\n    LeftCenter: object.position - 1,\r\n    RightCenter: object.position + 1,\r\n    LeftBottom: object.position + 19,\r\n    CenterBottom: object.position + 20,\r\n    RightBottom: object.position + 21,\r\n  }\r\n \r\n  const checkCoordinates = (position) => {\r\n    if (!objects.arrayOfPoints[position]) {\r\n      return;\r\n    }\r\n    if (objects.arrayOfPoints[position].isMine) {\r\n      return;\r\n    }\r\nobjects.arrayOfPoints[position].value++;\r\n  };\r\n\r\n\r\n\r\n  const checkConditions = () => {\r\n    if (object.position % 20 === 0) {\r\n     checkCoordinates(coordinates.CenterTop);\r\n      checkCoordinates(coordinates.RightTop);\r\n      checkCoordinates(coordinates.RightCenter);\r\n      checkCoordinates(coordinates.CenterBottom);\r\n      checkCoordinates(coordinates.RightBottom);\r\n      \r\n   }\r\n      \r\n    else if (object.position - 1 % 19 === 0) {\r\n        checkCoordinates(coordinates.CenterTop);\r\n      checkCoordinates(coordinates.RightTop);\r\n      checkCoordinates(coordinates.RightCenter);\r\n      checkCoordinates(coordinates.CenterBottom);\r\n      checkCoordinates(coordinates.RightBottom);\r\n     }\r\n    else {\r\n    checkCoordinates(coordinates.LeftTop);\r\n    checkCoordinates(coordinates.CenterTop);\r\n    checkCoordinates(coordinates.RightTop);\r\n    checkCoordinates(coordinates.LeftCenter);\r\n    checkCoordinates(coordinates.RightCenter);\r\n    checkCoordinates(coordinates.LeftBottom);\r\n    checkCoordinates(coordinates.CenterBottom);\r\n    checkCoordinates(coordinates.RightBottom);\r\n     }\r\n    \r\n  \r\n  };\r\n\r\n  checkConditions();\r\n}\r\n\r\nexport default putValueofBomb;","import { objects } from '../index';\r\nimport putValueOfBomb from './putValue';\r\n\r\nconst putMines = () => {\r\n    objects.bombs = objects.arrayOfPoints.filter((el) => el.isMine === true );\r\n    objects.bombs.map((el) => {\r\nputValueOfBomb(el);\r\n    })\r\n    \r\n};\r\n\r\nexport default putMines;","import { objects, refs, multiplyBombs } from '../index';\r\nimport createBomb from './putBombs';\r\nimport timer from './timer';\r\nimport putMines from './putMines';\r\n\r\n\r\n\r\nconst initGame = () => {\r\n objects.bombsQuantity = refs.menuMinesRef.value;\r\n        refs.menuMinesRef.setAttribute('disabled', 'disabled');\r\n        multiplyBombs(createBomb, objects.bombsQuantity);\r\n        putMines();\r\n        objects.minesDropped = true;\r\n        timer();\r\n}\r\n    \r\nexport default initGame;","import { refs, objects, Click } from '../index';\r\n\r\nconst defeat = () => {\r\n    clearInterval(objects.newTimer);\r\n    objects.bombs.map(el => {\r\n        refs.gameFieldRef.children[el.position].classList.add('isBomb');\r\n        \r\n    })\r\n    refs.menuStatusRef.textContent = \"You lose !\"\r\n    refs.gameFieldRef.removeEventListener('click', Click);\r\n}\r\n\r\nexport default defeat;","import './styles.css';\r\n\r\nimport fieldData from './js/pointsDataObject';\r\nimport putFlag from './js/putFlag';\r\nimport openPoint from './js/openPoint';\r\nimport createField from './js/createField';\r\nimport deleteDefusedMine from './js/deleteDefused';\r\nimport deleteFlag from './js/deleteFlag';\r\nimport showPrompt from './js/showPrompt';\r\nimport initGame from './js/initGame';\r\nimport defeat from './js/defeat';\r\n\r\nconst refs = {\r\n gameFieldRef: document.getElementById('game-field'),\r\n menuStatusRef: document.getElementById('menu__status'),\r\n menuTimerRef: document.getElementById('menu__timer'),\r\n menuButtonRef: document.getElementById('menu__prompt-button'),\r\n menuMinesRef: document.getElementById('menu__mines-select'),\r\n menuFlagsRef: document.getElementById('menu__flags'),\r\n}\r\n\r\nconst objects = {\r\nnewTimer: null,\r\n timerValue: 0,\r\n bombsDefused: [],\r\n bombs: [],\r\n minesDropped: false,\r\n bombsQuantity: 0,\r\n point: 0,\r\n numberofPoints: 220,\r\n arrayOfPoints: [],\r\n flagsUsed: 0,\r\n}\r\n\r\nrefs.menuStatusRef.textContent = '';\r\n\r\nconst callFuncCreateField = (callback, quantity) => {\r\n  for (let i = 0; i < quantity; i++) {\r\n    callback(i).setAttribute('data-value', i);\r\n  }\r\n};\r\n\r\nconst multiplyObjects = (numberofPoints) => {\r\n    for (let i = 0; i < numberofPoints; i++) {\r\n        let pointData = new fieldData(i, 0, false, false, false, false);\r\n        objects.arrayOfPoints.push(pointData);\r\n    }\r\n}\r\n\r\nconst multiplyBombs = (addBombsFunc, bombs) => {\r\n    for (let i = 0; i < bombs; i++) {\r\n        addBombsFunc(i);\r\n    }\r\n}\r\n\r\nmultiplyObjects(objects.numberofPoints);\r\ncallFuncCreateField(createField, objects.numberofPoints);\r\n\r\nconst Click = event => {\r\n    deleteDefusedMine(event);\r\n\r\n    if (event.ctrlKey) {\r\n        return putFlag(event);\r\n    }\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isFlag) {\r\n        return deleteFlag(event);\r\n    }\r\n\r\n    if (!objects.minesDropped) {\r\n        initGame();\r\n    }\r\n\r\n    if (objects.arrayOfPoints[event.target.dataset.value].isOpened) {\r\n        return;\r\n    }\r\n        \r\n    if (!objects.arrayOfPoints[event.target.dataset.value].isMine) {\r\n        return openPoint(event);\r\n    }\r\n    defeat(); \r\n} \r\n\r\nrefs.gameFieldRef.addEventListener('click', Click);\r\nrefs.menuButtonRef.addEventListener('click', showPrompt);\r\n\r\nexport { refs, objects, Click, multiplyBombs};"],"sourceRoot":""}